{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","className","s","box","options","FeedbackOptions","onLeaveFeedback","map","option","button","type","onClick","App","state","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","handleFeedback","feedback","target","dataset","setState","prevState","this","totalFeedbackCount","positiveFeedback","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAceA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,M,gBCHU,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICCb,IAgCeC,EAhCI,SAAC,GAAD,IACdC,EADc,EACdA,KACAC,EAFc,EAEdA,QACCC,EAHa,EAGbA,IACAC,EAJa,EAIbA,MACAC,EALa,EAKbA,2BALa,OAOjB,mCACGD,EACC,qBAAIE,UAAWC,IAAEC,IAAjB,UACE,qBAAIF,UAAWC,IAAEE,QAAjB,mBAAiCR,EAAjC,OACA,qBAAIK,UAAWC,IAAEE,QAAjB,sBAAoCP,EAApC,OACA,qBAAII,UAAWC,IAAEE,QAAjB,kBAAgCN,EAAhC,OACA,qBAAIG,UAAWC,IAAEE,QAAjB,oBAAkCL,EAAlC,OACA,qBAAIE,UAAWC,IAAEE,QAAjB,gCACsBJ,EADtB,UAKF,cAACP,EAAD,CAAcC,QAAQ,yB,gBCGbW,EArBS,SAAC,GAAD,IAAGD,EAAH,EAAGA,QAASE,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKL,UAAWC,IAAEE,QAAlB,SACGA,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEP,UAAWC,IAAEO,OACbC,KAAK,SACL,gBAAeF,EACfG,QAASL,EAJX,SAOGE,GAFIA,SCRPJ,EAAU,CAAC,OAAQ,MAAO,WAE1BQ,E,4MACJC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,mBAAqB,WACnB,MAA+B,EAAKD,MAA5BjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,OAAOD,EADP,EAAuBE,IACHD,G,EAGtBkB,gCAAkC,WAChC,IAAIC,EAAgB,EAAKF,qBACjBlB,EAAS,EAAKiB,MAAdjB,KACR,OAAOoB,EAAgBC,KAAKC,MAAOtB,EAAOoB,EAAiB,KAAO,G,EAGpEG,eAAiB,YAAiB,IACxBC,EADuB,EAAbC,OACUC,QAApBF,SACR,EAAKG,UAAS,SAAAC,GACZ,OAAO,eAAGJ,EAAWI,EAAUJ,GAAY,O,4CAI/C,WACE,MAA+BK,KAAKZ,MAA5BjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB4B,EAAqBD,KAAKX,qBAC1Ba,EAAmBF,KAAKV,kCAE9B,OACE,qCACE,cAAC,EAAD,CAASxB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEa,QAASA,EACTE,gBAAiBmB,KAAKN,mBAG1B,cAAC,EAAD,CAAS5B,MAAO,aAAhB,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,EACP1B,2BAA4B2B,a,GA5CtBC,aAoDHhB,ICrDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,IAAM,wBAAwB,QAAU,8B,kBCA1DD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,mC","file":"static/js/main.db2c88d4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({\r\n     good,\r\n     neutral,\r\n      bad, \r\n      total, \r\n      positiveFeedbackPercentage,\r\n    }) => (\r\n  <>\r\n    {total ? (\r\n      <ul className={s.box}>\r\n        <li className={s.options}> Good:{good} </li>\r\n        <li className={s.options}> Neutral:{neutral} </li>\r\n        <li className={s.options}> Bad:{bad} </li>\r\n        <li className={s.options}> Total:{total} </li>\r\n        <li className={s.options}>\r\n          Positive feedback: {positiveFeedbackPercentage}%\r\n        </li>\r\n      </ul>\r\n    ) : (\r\n      <Notification message=\"No feedback given\" />\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.options}>\r\n    {options.map(option => (\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        data-feedback={option}\r\n        onClick={onLeaveFeedback}\r\n        key={option}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n\nconst options = ['good', 'bad', 'neutral'];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + bad + neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let totalFeedback = this.countTotalFeedback();\n    const { good } = this.state;\n    return totalFeedback ? Math.round((good / totalFeedback) * 100) : 0;\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => {\n      return { [feedback]: prevState[feedback] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedbackCount = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedbackCount}\n            positiveFeedbackPercentage={positiveFeedback}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Statistics_box__3ceIt\",\"options\":\"Statistics_options__tIi42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"FeedbackOptions_options__70Yh2\",\"button\":\"FeedbackOptions_button__1CBqS\"};"],"sourceRoot":""}